1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining),
by=c('Representative'))
View(wi_assembly_scores)
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
join(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining),
by=c('Representative'))
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
full_join(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining),
by=c('Representative'))
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
right_join(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining),
by=c('Representative'))
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
bind_cols(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining))
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
bind_cols(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining)) %>%
select(.,-`Representative...10`)
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4)
right_join(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1), by=c('Representative'))
right_join(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1)%>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining), by=c('Representative'))
bind_cols(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1)%>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining))
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
bind_cols(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining)) %>%
bind_rows(                                                                ## Pages 10 and 11 have the rows for the rest of the representatives - we want to bind on these rows using bind_rows()
bind_cols(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1)%>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining))
) %>%
select(.,-`Representative...10`)
View(wi_assembly_scores)
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
bind_cols(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining)) %>%
bind_rows(                                                                ## Pages 10 and 11 have the rows for the rest of the representatives - we want to bind on these rows using bind_rows()
bind_cols(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1)%>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining))
) %>%
select(.,-`Representative...10`) %>%  ##Drop repetitive columns.
janitor :: clean_names() %>%
rename(name = representative) %>%
mutate(senate=0, .before = 'name')
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
bind_cols(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining)) %>%
bind_rows(                                                                ## Pages 10 and 11 have the rows for the rest of the representatives - we want to bind on these rows using bind_rows()
bind_cols(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1)%>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining))
) %>%
select(.,-`Representative...10`) %>%  ##Drop repetitive columns.
janitor :: clean_names() %>%
rename(name = `representative...1`) %>%
mutate(senate=0, .before = 'name')
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
bind_cols(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining)) %>%
bind_rows(                                                                ## Pages 10 and 11 have the rows for the rest of the representatives - we want to bind on these rows using bind_rows()
bind_cols(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1)%>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining))
) %>%
select(.,-`Representative...10`) %>%  ##Drop repetitive columns.
janitor :: clean_names()
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
bind_cols(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining)) %>%
bind_rows(                                                                ## Pages 10 and 11 have the rows for the rest of the representatives - we want to bind on these rows using bind_rows()
bind_cols(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1)%>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining))
) %>%
select(.,-`Representative...10`) %>%  ##Drop repetitive columns.
janitor :: clean_names() %>%
rename(name = `representative_1`) %>%
mutate(senate=0, .before = 'name')
View(wi_assembly_scores)
names(wi_assembly_scores)
basic_text_scrape_fun(wi_text[14], "Senator", "JOINT", 1)
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1)
wi_senate_score <- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1)
)
View(wi_senate_score)
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1)
basic_text_scrape_fun <- function(page, start_text, end_text, end_diff){      ## We can define our own function to speed things up
page %>%
substr(str_locate(., start_text), str_locate(., end_text)-end_diff) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n") %>%                                    ## replace pipes after line breaks with just line breaks
str_replace_all("Score\\\nScience", "Score\\|Science") %>%
str_replace_all("Representative\\\nWetlands", "Representative\\|Wetlands") %>%
read_delim(delim = "|")
}
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1)
wi_senate_score <- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1)
)
View(wi_senate_score)
wi_text[15] %>%
substr(str_locate(., "Senator"), str_locate(., "Note")-1) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n") %>%                                    ## replace pipes after line breaks with just line breaks
str_replace_all("Score\\\nScience", "Score\\|Science") %>%
str_replace_all("Representative\\\nWetlands", "Representative\\|Wetlands")
basic_text_scrape_fun <- function(page, start_text, end_text, end_diff){      ## We can define our own function to speed things up
page %>%
substr(str_locate(., start_text), str_locate(., end_text)-end_diff) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n") %>%                                    ## replace pipes after line breaks with just line breaks
str_replace_all("Score\\\nScience", "Score\\|Science") %>%
str_replace_all("Representative\\\nWetlands", "Representative\\|Wetlands") %>%
str_replace_all("Senator\\\nAir", "Representative\\|Air") %>%
read_delim(delim = "|")
}
wi_assembly_scores <- basic_text_scrape_fun(wi_text[10],                    ## Use our function to scrape page 8
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water) %>%
bind_cols(                                                                ## Page 9 has the rest of the columns for the representatives on page 8 - we want to bind on these columns using bind_cols()
basic_text_scrape_fun(wi_text[11],                                      ## Use our function to scrape page 9
"Representative",
"Note",
1) %>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining)) %>%
bind_rows(                                                                ## Pages 10 and 11 have the rows for the rest of the representatives - we want to bind on these rows using bind_rows()
bind_cols(                                                              ## Pages 10 and 11 have all the columns for the representatives on page 10 - we want to bind these columns together using bind_cols()
basic_text_scrape_fun(wi_text[12],                                  ## Use our function to scrape page 10
"Representative",
"Legislator",
4) %>%
rename(ss_ss_1=Science, ss_sb_10=Wetlands, ss_ab_8=`Public Health`,
sb_75=Wildlife, sb_81=`Clean Energy`, sb_326=Water),
basic_text_scrape_fun(wi_text[13],                                  ## Use our function to scrape page 11
"Representative",
"Note",
1)%>%
rename(sb_368=Wetlands, sb_407=Toxics, sb_441=Wildlife, ab_165=Phosphorus,
ab_177=Water, ab_303=`Land Use`, ab_395=Land, ab_426=Mining))
) %>%
select(.,-`Representative...10`) %>%  ##Drop repetitive columns.
janitor :: clean_names() %>%
rename(name = `representative_1`) %>%
mutate(senate=0, .before = 'name')
View(wi_assembly_scores)
wi_senate_score <- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1)
)
View(wi_senate_score)
basic_text_scrape_fun <- function(page, start_text, end_text, end_diff){      ## We can define our own function to speed things up
page %>%
substr(str_locate(., start_text), str_locate(., end_text)-end_diff) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n") %>%                                    ## replace pipes after line breaks with just line breaks
str_replace_all("Score\\\nScience", "Score\\|Science") %>%
str_replace_all("Representative\\\nWetlands", "Representative\\|Wetlands") %>%
str_replace_all("Senator\\\nAir", "Senator\\|Air") %>%
read_delim(delim = "|")
}
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1)
wi_senate_score <- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1)
)
View(wi_senate_score)
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1)
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1)
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81"))
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426"))
wi_senate_score <- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81")) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426"))
)
View(wi_senate_score)
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426")
)
a<-    basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426"))
View(a)
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81")) %>% bind_cols(a)
View(a)
a %>% bind_cols(basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
+     set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
+                 "sb_81")))
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1)
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1)
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81"))
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81")) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426"))
)
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426")
)
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1)
View(a)
b<- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 1) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81"))
View(b)
basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 3)
b<- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 3) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81"))
View(b)
wi_senate_score <- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 3) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81")) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426"))
)
wi_senate_score <- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 3) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81")) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426"))
) %>%
select(., -`name...8`) %>%
janitor::clean_names() %>%
rename(name = `name...1`) %>%
mutate(senate = 1, .before='name')
wi_senate_score <- basic_text_scrape_fun(wi_text[14], "Senator", "Legislator", 3) %>%
set_names(c('name', 'district', 'score', 'ss_sb_1', 'ss_sb_10', 'ss_ab_8',
"sb_81")) %>%
bind_cols(
basic_text_scrape_fun(wi_text[15], "Senator", "Note", 1) %>%
set_names(c('name', 'sb_111', 'sb_138', 'sb_326', 'sb_368', 'sb_441',
"ab_426"))
) %>%
select(., -`name...8`) %>%
rename(name = `name...1`) %>%
mutate(senate = 1, .before='name')
names(wi_senate_score)
file.choose()
#####set up
rm(list = ls())
library(pacman)
p_load(tidyverse, pdftools, rlist, zoo)
library(dplyr)
####load data
setwd("~/Library/CloudStorage/Box-Box/Legislative Scorecards")
wi_text <- pdf_text("Data/raw/Wisconsin/2013-2014ScorecardWeb.pdf")
wi_text[9]%>%
substr(str_locate(., 'District'), str_locate(., 'JOHN')-1)
wi_text[9]
wi_text[9]%>%
substr(str_locate(., 'DISTRICT'), str_locate(., 'JOHN')-1)
wi_text[9]%>%
substr(str_locate(., 'DISTRICT'), str_locate(., 'JOHN')-1) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n")
wi_text[9]%>%
substr(str_locate(., 'DISTRICT'), str_locate(., 'JOHN')-1) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n") %>%                                    ## replace pipes after line breaks with just line breaks
# str_replace_all("Score\\\nScience", "Score\\|Science") %>%
# str_replace_all("Representative\\\nWetlands", "Representative\\|Wetlands") %>%
# str_replace_all("Senator\\\nAir", "Senator\\|Air") %>%
read_delim(delim = "|")
wi_text[9]%>%
substr(str_locate(., 'DISTRICT'), str_locate(., 'JOHN')-1) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n")
wi_text[9]%>%
substr(str_locate(., 'DISTRICT'), str_locate(., 'JOHN')-1)
wi_data <- pdf_data("Data/raw/Wisconsin/2013-2014ScorecardWeb.pdf")
wi_data[[9]]
a<-wi_data[[9]]
View(a)
wi_text <- pdf_text("Data/raw/Wisconsin/2013-2014ScorecardWeb.pdf")
wi_text[9]%>%
substr(str_locate(., 'DISTRICT'), str_locate(., 'JOHN')-1) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n")
read_delim(delim = "|")
rm(list = ls())
library(pacman)
p_load(tidyverse, pdftools, rlist, zoo)
library(dplyr)
####load data
setwd("~/Library/CloudStorage/Box-Box/Legislative Scorecards")
wi_text <- pdf_text("Data/raw/Wisconsin/2013-2014ScorecardWeb.pdf")
wi_text[9]%>%
substr(str_locate(., 'DISTRICT'), str_locate(., 'JOHN')-1) %>%     ## Subset to the right rows
str_replace_all(" {2,}", "\\|") %>%                                       ## Replace double spaces with pipes
str_replace_all("\\\n\\|", "\\\n")
read_delim(delim = "|")
wi_text[9]%>%
substr(str_locate(., 'DISTRICT'), str_locate(., 'JOHN')-1)
